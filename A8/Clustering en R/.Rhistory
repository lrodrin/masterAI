original <- c(1000, 800, 900, 1100, 900)
predicted <- predict(original)
new.cars <- data.frame(wt=c(1.7, 2.4, 3.6))
predict(Model, newdata=new.cars)
fit_1 <- lm(original, data = original)
fit_1 <- lm(original)
lm_kang <- lm(nose_length ~ nose_width, data=original)
original <- c(1000, 800, 900, 1100, 900)
lm_kang <- lm(nose_length ~ nose_width, data=original)
lm_original -> lm(data = original)
lm_original <- lm(data = original)
lm_original <- lm(original~1)
View(lm_original)
original <- c(1000, 800, 900, 1100, 900)
original
lm_original <- lm(original~1)
lm_original
lm_original[["residuals"]]
original = c(1000, 800, 900, 1100, 900)
original
lm_original <- lm(original~1)
predicted = c(60, -140, -40, 160, -40)
predicted
d = original-predicted
mse = mean((d)^2)
mae = mean(abs(d))
version
install.packages(c("caret", "knitr", "mlbench"))
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(cluster)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
ggplot(BreastCancer.features, aes(Mitoses, Epith.c.size, color = Class)) + geom_point()
ggplot(BreastCancer, aes(Mitoses, Epith.c.size, color = Class)) + geom_point()
km_clusters <- kmeans(BreastCancer.features[, c(5, 9)], 2, nstart = 20)
km_clusters
tablaResultados <- table(km_clusters$cluster, BreastCancer$Class)
tablaResultados
library(corrplot)
corrplot(cor(BreastCancer.features), method = "number",type = "lower")
View(BreastCancer.features)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], 2, nstart = 20)
km_clusters
tablaResultados <- table(km_clusters$cluster, BreastCancer$Class)
tablaResultados
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)],
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot")
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(factoextra)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
#INSERTAR CÓDIGO AQUÍ
corrplot(cor(BreastCancer), method = "number", type = "lower")
#INSERTAR CÓDIGO AQUÍ
corrplot(cor(BreastCancer.features), method = "number", type = "lower")
km_clusters <- kmeans(BreastCancer.features[, c(6, 9)], 2, nstart = 20)
km_clusters
tablaResultados <- table(km_clusters$cluster, BreastCancer$Class)
tablaResultados
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
#INSERTAR CÓDIGO AQUÍ
corrplot(cor(BreastCancer.features), method = "number", type = "lower")
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("center", "scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("center", "scale", "YeoJohnson"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], 2, nstart = 20)
km_clusters
fviz_cluster(km_clusters, data = BreastCancer.features[, c("Cell.size", "Cell.shape")],
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot")
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
fviz_cluster(km_clusters, data = BreastCancer.features[, c("Cell.size", "Cell.shape")])
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
ggplot(BreastCancer, aes(Cell.size, Cell.shape, color = as.factor(km_clusters$cluster))) + geom_point()
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(ggdendro)
library(corrplot)
data(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
summary(BreastCancer)
#INSERTAR CÓDIGO AQUÍ
sum(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
BreastCancer <- na.omit(BreastCancer)
any(is.na(BreastCancer))
#INSERTAR CÓDIGO AQUÍ
for (i in 1:(ncol(BreastCancer) - 1))
BreastCancer[, i] <- as.numeric(as.character(BreastCancer[, i]))
str(BreastCancer, width = 85, strict.width = "cut")
#INSERTAR CÓDIGO AQUÍ
BreastCancer$Id <- NULL
head(BreastCancer, 3)
# INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
str(BreastCancer.features, width = 85, strict.width = "cut")
# En este caso solo estamos mostrando el gráfico para las variables Cl.thickness y Cell.size.
ggplot(BreastCancer, aes(Cl.thickness, Cell.size, color = Class)) + geom_point()
#INSERTAR CÓDIGO AQUÍ
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
km_clusters
table(km_clusters$cluster, BreastCancer$Class)
#INSERTAR CÓDIGO AQUÍ
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("center", "scale"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("center", "scale", "YeoJohnson"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("range"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
#INSERTAR CÓDIGO AQUÍ
BreastCancer.scale <- preProcess(BreastCancer[, 1:9], method=c("range", "YeoJohnson"))
BreastCancer.features <- predict(BreastCancer.scale, BreastCancer[, 1:9])
set.seed(101)
km_clusters <- kmeans(BreastCancer.features[, c(2, 3)], centers = 2, nstart = 20)
table(km_clusters$cluster, BreastCancer$Class)
fviz_cluster(km_clusters, data = BreastCancer.features[, c(2, 3)])
setwd("C:/Users/Laura/masterAI/A8/Clustering en R")
unlink('Práctica-R-Clustering_cache', recursive = TRUE)
